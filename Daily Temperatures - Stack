Example 1:
Input: temperatures = [73,74,75,71,69,72,76,73]
Output: [1,1,4,2,1,1,0,0]

Example 2:
Input: temperatures = [30,40,50,60]
Output: [1,1,1,0]

Example 3:
Input: temperatures = [30,60,90]
Output: [1,1,0]

Techniques I used: Monotonic Stack

//Brute Force O(n^2)
class Solution {
    public int[] dailyTemperatures(int[] temperatures) {
        int[] res = new int[temperatures.length];
        for(int i = 0;i<temperatures.length;++i){
            for(int j = i+1;j<temperatures.length;++j){
                if(temperatures[j]>temperatures[i]){
                    res[i] = j-i;
                    break;
                }
            }
        }
        return res;
    }
}

//Optimal O(n)
class Solution {
    public int[] dailyTemperatures(int[] temperatures) {
        int[] res = new int[temperatures.length];
       Stack<Integer> st = new Stack<>();
       st.add(0);
       for(int i = 1;i<temperatures.length;++i){
           while(!st.isEmpty() && temperatures[st.peek()]<temperatures[i]){
               int temp = st.pop();
               res[temp] =   i-temp;
              
           }
           st.push(i);
       }
        return res;
    }
}
