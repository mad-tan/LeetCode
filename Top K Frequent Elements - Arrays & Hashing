// Techniques I used: HashMap, Bucket Sort 

class Solution {
    public int[] topKFrequent(int[] nums, int k) {
       Map<Integer, Integer> counts = new HashMap<>();
        for (int n : nums) {
            counts.put(n, counts.getOrDefault(n, 0) + 1);
        }
        List<Integer>[] bucket = new List[nums.length + 1];
        for (int n : counts.keySet()) {
            int count = counts.get(n);
            if (bucket[count] == null) bucket[count] = new ArrayList<>();
            bucket[count].add(n);
        }

        int[] res = new int[k];
        int j = 0;
        for (int i = nums.length; i >= 0; i--) {
            if (bucket[i] == null) continue;
            for (int n : bucket[i]) {
                res[j++] = n;
                if (j == k) return res;
            }
        }

        return res;

    }
}
