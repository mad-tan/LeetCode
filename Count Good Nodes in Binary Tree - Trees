Example 1:
Input: root = [3,1,4,3,null,1,5]
Output: 4
Explanation: Nodes in blue are good.
Root Node (3) is always a good node.
Node 4 -> (3,4) is the maximum value in the path starting from the root.
Node 5 -> (3,4,5) is the maximum value in the path
Node 3 -> (3,1,3) is the maximum value in the path.

Example 2:
Input: root = [3,3,null,4,2]
Output: 3
Explanation: Node 2 -> (3, 3, 2) is not good, because "3" is higher than it.

Example 3:
Input: root = [1]
Output: 1
Explanation: Root is considered as good.

Techniques I used: DFS

//Recursive DFS
class Solution {
    int goodCount = 1;
    public int goodNodes(TreeNode root) {
        goodNodes(root.val,root.left);
        goodNodes(root.val,root.right);
        return goodCount;
    }
    public void goodNodes(Integer maxVal, TreeNode child){
        if(child==null){
            return;
        }
        if(child.val >= maxVal) goodCount++;
        goodNodes(Math.max(maxVal,child.val),child.left);
        goodNodes(Math.max(maxVal,child.val),child.right);
    }
}
