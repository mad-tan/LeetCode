Example 1:
Input: l1 = [2,4,3], l2 = [5,6,4]
Output: [7,0,8]
Explanation: 342 + 465 = 807.

Example 2:
Input: l1 = [0], l2 = [0]
Output: [0]

Example 3:
Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]
Output: [8,9,9,9,0,0,0,1]

Techniques I used: Linked List

class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int carry = 0;
        ListNode head = new ListNode(0);
        ListNode temp = head;
        while(l1!=null && l2!=null){
            int a = l1.val;
            int b = l2.val;
            int sum = a+b+carry;
            ListNode newNode = new ListNode(sum%10);
            carry = sum/10;
            temp.next = newNode;
            temp = newNode;
            l1= l1.next;
            l2 = l2.next;
        }
        if(l1!=null || l2!=null)    {
            l1 = l1!=null?l1:l2;
            while(l1!=null ){
                int a = l1.val;
                int sum = a+carry;
                ListNode newNode = new ListNode(sum%10);
                carry = sum/10;
                temp.next = newNode;
                temp = newNode;
                l1= l1.next;
            }
        }
        if(carry!=0)    temp.next = new ListNode(carry);
        return head.next;
    }
}
