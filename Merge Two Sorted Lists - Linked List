Example 1:
Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]

Example 2:
Input: list1 = [], list2 = []
Output: []

Example 3:
Input: list1 = [], list2 = [0]
Output: [0]

Techniques I used: Linked List

//Iterative
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode res = new ListNode();
        ListNode head = res;
        while(list1!=null && list2!=null){
            if(list1.val <= list2.val){
                res.next = list1;
                list1 = list1.next;
                res = res.next;
            }
            else{
                res.next = list2;
                list2 = list2.next;
                res = res.next;
            }
        }
        res.next = (list1!=null)?list1:list2;
        return head.next;
    }
}

//Recursive
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
         if (list1 == null) {
            return list2;
        }
        else if (list2 == null) {
            return list1;
        }
        else if (list1.val < list2.val) {
            list1.next = mergeTwoLists(list1.next, list2);
            return list1;
        }
        else {
            list2.next = mergeTwoLists(list1, list2.next);
            return list2;
        }
    }
}
